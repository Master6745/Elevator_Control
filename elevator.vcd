$date
	Wed Oct 08 12:42:04 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_elevator $end
$var wire 1 ! moving_up $end
$var wire 1 " moving_down $end
$var wire 1 # door_open $end
$var wire 2 $ current_floor [1:0] $end
$var reg 1 % clk $end
$var reg 4 & down_req [3:0] $end
$var reg 1 ' reset $end
$var reg 4 ( up_req [3:0] $end
$scope module uut $end
$var wire 1 % clk $end
$var wire 4 ) down_req [3:0] $end
$var wire 1 ' reset $end
$var wire 4 * up_req [3:0] $end
$var reg 2 + current_floor [1:0] $end
$var reg 1 # door_open $end
$var reg 1 " moving_down $end
$var reg 1 ! moving_up $end
$var reg 2 , next_state [1:0] $end
$var reg 4 - requests [3:0] $end
$var reg 2 . state [1:0] $end
$var reg 2 / target_floor [1:0] $end
$var integer 32 0 i [31:0] $end
$scope task find_next_down $end
$var reg 2 1 floor [1:0] $end
$var reg 2 2 next_floor [1:0] $end
$var reg 4 3 reqs [3:0] $end
$upscope $end
$scope task find_next_up $end
$var reg 2 4 floor [1:0] $end
$var reg 2 5 next_floor [1:0] $end
$var reg 4 6 reqs [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
1'
b0 &
0%
b0 $
0#
0"
0!
$end
#5
1%
#10
0%
0'
#15
1%
#20
0%
b101 (
b101 *
#25
b10 /
b100 0
b10 5
b0 4
b101 6
b1 ,
b101 -
1%
#30
0%
#35
1!
b1 .
1%
#40
0%
b0 (
b0 *
#45
1!
b1 $
b1 +
1%
#50
0%
#55
b11 ,
1!
b10 $
b10 +
1%
#60
0%
#65
b0 ,
1#
0!
b11 .
1%
#70
0%
#75
b100 0
b10 4
b1 ,
0#
b0 .
b101 -
1%
#80
0%
#85
b11 ,
1!
b1 .
1%
#90
0%
b1000 &
b1000 )
#95
b0 ,
1#
0!
b1101 -
b11 .
1%
#100
0%
#105
b11 /
b11 5
b100 0
b1001 6
b1 ,
0#
b1001 -
b0 .
1%
#110
0%
#115
1!
b1 .
1%
#120
0%
#125
b11 ,
1!
b11 $
b11 +
1%
#130
0%
b0 &
b0 )
#135
b0 ,
1#
0!
b11 .
1%
#140
0%
#145
b0 /
b11111111111111111111111111111111 0
b0 2
b11 1
b1 3
b10 ,
0#
b1 -
b0 .
1%
#150
0%
#155
1"
b10 .
1%
#160
0%
b10 (
b10 *
#165
1"
b10 $
b10 +
b11 -
1%
#170
0%
#175
1"
b1 $
b1 +
1%
#180
0%
b0 (
b0 *
#185
b11 ,
1"
b0 $
b0 +
1%
#190
0%
#195
b0 ,
1#
0"
b11 .
1%
#200
0%
#205
b10 /
b100 0
b10 5
b0 4
b110 6
b1 ,
0#
b0 .
b110 -
1%
b100 &
b100 )
#210
0%
#215
1!
b1 .
1%
#220
0%
#225
1!
b1 $
b1 +
1%
#230
0%
#235
b11 ,
1!
b10 $
b10 +
1%
b0 &
b0 )
#240
0%
#245
b0 ,
1#
0!
b11 .
1%
#250
0%
#255
b100 0
b10 4
b1 ,
0#
b0 .
b110 -
1%
#260
0%
#265
b11 ,
1!
b1 .
1%
#270
0%
#275
b0 ,
1#
0!
b1111 -
b11 .
1%
b1001 (
b1001 *
#280
0%
#285
b11 /
b11 5
b100 0
b1011 6
b1 ,
0#
b1011 -
b0 .
1%
#290
0%
#295
1!
b1 .
1%
b0 (
b0 *
#300
0%
#305
b11 ,
1!
b11 $
b11 +
1%
#310
0%
#315
b0 ,
1#
0!
b11 .
1%
#320
0%
#325
b0 /
b11111111111111111111111111111111 0
b0 2
b11 3
b10 ,
0#
b11 -
b0 .
1%
#330
0%
#335
1"
b10 .
1%
#340
0%
#345
1"
b10 $
b10 +
1%
#350
0%
#355
1"
b1 $
b1 +
1%
#360
0%
#365
b11 ,
1"
b0 $
b0 +
1%
#370
0%
#375
b0 ,
1#
0"
b11 .
1%
#380
0%
#385
b1 /
b100 0
b1 5
b0 4
b10 6
b1 ,
0#
b10 -
b0 .
1%
#390
0%
#395
1!
b1 .
1%
#400
0%
#405
b11 ,
1!
b1 $
b1 +
1%
#410
0%
#415
b0 ,
1#
0!
b11 .
1%
#420
0%
#425
0#
b0 -
b0 .
1%
#430
0%
#435
1%
#440
0%
#445
1%
#450
0%
#455
1%
#460
0%
#465
1%
#470
0%
#475
1%
#480
0%
#485
1%
#490
0%
#495
1%
#500
0%
#505
1%
#510
0%
#515
1%
#520
0%
#525
1%
#530
0%
#535
1%
#540
0%
#545
1%
#550
0%
#555
1%
#560
0%
#565
1%
#570
0%
#575
1%
#580
0%
#585
1%
#590
0%
#595
1%
#600
0%
#605
1%
#610
0%
#615
1%
#620
0%
#625
1%
#630
0%
#635
1%
#640
0%
#645
1%
#650
0%
#655
1%
#660
0%
#665
1%
#670
0%
#675
1%
#680
0%
#685
1%
#690
0%
#695
1%
#700
0%
#705
1%
#710
0%
#715
1%
#720
0%
#725
1%
#730
0%
#735
1%
#740
0%
#745
1%
#750
0%
#755
1%
#760
0%
#765
1%
#770
0%
#775
1%
#780
0%
#785
1%
#790
0%
#795
1%
#800
0%
#805
1%
#810
0%
#815
1%
#820
0%
#825
1%
#830
0%
#835
1%
#840
0%
#845
1%
#850
0%
#855
1%
#860
0%
#865
1%
#870
0%
#875
1%
#880
0%
#885
1%
#890
0%
#895
1%
